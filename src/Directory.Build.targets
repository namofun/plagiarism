<Project>

  <PropertyGroup>
    <CleanDependsOn>$(CleanDependsOn);Antlr4CodeClean</CleanDependsOn>
    <CompileDependsOn>_Antlr4GeneratedFiles;$(CompileDependsOn)</CompileDependsOn>
  </PropertyGroup>
  
  <Target Name="Antlr4CodeGeneration" BeforeTargets="PreBuildEvent"
          Inputs="@(Antlr4)" Outputs="@(Antlr4->'$(ProjectDir)/Grammars/%(Filename).interp')">
    <Exec Command="java -jar $(SolutionDir)packages/antlr-4.8.jar -Dlanguage=CSharp -message-format vs2005 -package $(AntlrGeneratedNamespace) -o Grammars %(Antlr4.Identity)" ConsoleToMsBuild="true" />
  </Target>
  
  <UsingTask TaskName="_Antlr4GeneratedFilesDetection" TaskFactory="RoslynCodeTaskFactory"
             AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <Previous ParameterType="System.String[]" Required="true" />
      <Lines ParameterType="System.String[]" Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Using Namespace="System.IO"/>
      <Using Namespace="System.Linq"/>
      <Code Type="Fragment" Language="cs"><![CDATA[
Lines = Directory.Exists("Grammars") ? Directory.GetFiles("Grammars").Where(a => a.EndsWith(".cs")).Except(Previous).ToArray() : Array.Empty<string>();
]]></Code>
    </Task>
  </UsingTask>

  <Target Name="_Antlr4GeneratedFiles" AfterTargets="Antlr4CodeGeneration">
    <_Antlr4GeneratedFilesDetection Previous="@(Compile)">
      <Output TaskParameter="Lines" ItemName="Antlr4OutputCodeFilesList" />
    </_Antlr4GeneratedFilesDetection>
    
    <ItemGroup>
      <Compile Include="@(Antlr4OutputCodeFilesList)" />
    </ItemGroup>
  </Target>
  
  <ItemGroup>
    <Antlr4 Include="$(ProjectDir)/*.g4" />
  </ItemGroup>

  <Target Name="Antlr4CodeClean">
    <RemoveDir Directories="$(ProjectDir)/Grammars" />
  </Target>

</Project>
